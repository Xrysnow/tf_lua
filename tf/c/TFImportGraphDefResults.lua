---@class tf.TFImportGraphDefResults
--- TF_ImportGraphDefResults holds results that are generated by
--- TF_GraphImportGraphDefWithResults().
local M = class('tf.TFImportGraphDefResults')
local lib = require('tf.c._c_api')

function M:ctor(hdl)
    assert(hdl and not ffi.isnullptr(hdl))
    self.handle = hdl
end
--- Deletes a results object returned by TF_GraphImportGraphDefWithResults().
function M:dtor()
    lib.TF_DeleteImportGraphDefResults(self.handle)
    self.handle = nil
end
--- Fetches the return outputs requested via
--- TF_ImportGraphDefOptionsAddReturnOutput(). The number of fetched outputs is
--- returned in `num_outputs`. The array of return outputs is returned in
--- `outputs`. `*outputs` is owned by and has the lifetime of `results`.
---@return tf.TFOutput[]
function M:returnOutputs()
    local num_outputs = ffi.new('int[1]')
    local outputs = ffi.new('TF_Output*[1]')
    lib.TF_ImportGraphDefResultsReturnOutputs(self.handle, num_outputs, outputs)
    local n = num_outputs[0]
    local arr = outputs[0]
    local ret = {}
    for i = 1, n do
        local hdl = ffi.new('TF_Output[1]')
        hdl[0] = arr[i - 1]
        ret[i] = require('tf.c.TFOutput')(hdl)
    end
    return ret
end
--- Fetches the return operations requested via
--- TF_ImportGraphDefOptionsAddReturnOperation(). The number of fetched
--- operations is returned in `num_opers`. The array of return operations is
--- returned in `opers`. `*opers` is owned by and has the lifetime of `results`.
---@return tf.TFOperation[]
function M:returnOperations()
    local num_opers = ffi.new('int[1]')
    local opers = ffi.new('TF_Operation**[1]')
    lib.TF_ImportGraphDefResultsReturnOperations(self.handle, num_opers, opers)
    local n = num_opers[0]
    local arr = opers[0]
    local ret = {}
    for i = 1, n do
        ret[i] = require('tf.c.TFOperation')(arr[i - 1])
    end
    return ret
end
--- Fetches any input mappings requested via
--- TF_ImportGraphDefOptionsAddInputMapping() that didn't appear in the GraphDef
--- and weren't used as input to any node in the imported graph def. The number
--- of fetched mappings is returned in `num_missing_unused_input_mappings`. The
--- array of each mapping's source node name is returned in `src_names`, and the
--- array of each mapping's source index is returned in `src_indexes`.
---
--- `*src_names`, `*src_indexes`, and the memory backing each string in
--- `src_names` are owned by and have the lifetime of `results`.
function M:missingUnusedInputMappings()
    local num_missing_unused_input_mappings = ffi.new('int[1]')
    local src_names = ffi.new('const char**[1]')
    local src_indexes = ffi.new('int*[1]')
    lib.TF_ImportGraphDefResultsMissingUnusedInputMappings(
            self.handle, num_missing_unused_input_mappings, src_names, src_indexes)
    local n = num_missing_unused_input_mappings[0]
    local arr_name = src_names[0]
    local arr_index = src_indexes[0]
    local ret = {}
    for i = 1, n do
        local name = ffi.string(arr_name[i - 1])
        local index = tonumber(arr_index[i - 1])
        ret[i] = { name = name, index = index }
    end
    return ret
end

return M
